<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üì¶ Productos en Tiempo Real</title>
    <style>
        body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; padding: 20px; background-color: #f4f7f6; color: #333; }
        h1 { color: #2c3e50; text-align: center; margin-bottom: 30px; }
        .form-section {
            background-color: #fff;
            padding: 20px;
            margin-bottom: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        }
        .form-section h2 {
            color: #34495e;
            margin-top: 0;
            border-bottom: 1px solid #eee;
            padding-bottom: 10px;
            margin-bottom: 20px;
        }
        form {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-bottom: 20px;
        }
        form div {
            display: flex;
            flex-direction: column;
        }
        form label {
            margin-bottom: 5px;
            font-weight: bold;
            color: #555;
        }
        form input[type="text"],
        form input[type="number"],
        form button {
            padding: 10px 12px;
            border: 1px solid #ccc;
            border-radius: 5px;
            font-size: 1rem;
        }
        form button {
            background-color: #3498db;
            color: white;
            border: none;
            cursor: pointer;
            transition: background-color 0.2s ease;
            margin-top: 10px; /* Alinea los botones con los inputs */
        }
        form button:hover {
            background-color: #2980b9;
        }
        #delete-form button {
            background-color: #e74c3c;
        }
        #delete-form button:hover {
            background-color: #c0392b;
        }
        ul { list-style-type: none; padding: 0; }
        li {
            background-color: #fff;
            padding: 15px;
            margin-bottom: 10px;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.03);
            border: 1px solid #eee;
        }
        li strong { font-size: 1.1em; color: #2c3e50; }
        li span { color: #666; margin-right: 10px; font-size: 0.9em;}
        li .product-id { font-family: monospace; font-size: 0.85em; background-color: #f0f0f0; padding: 3px 6px; border-radius: 4px; }
        .no-products {
            text-align: center;
            color: #e74c3c;
            font-size: 1.2em;
            padding: 30px;
            border: 1px solid #e74c3c;
            background-color: #fdeded;
            border-radius: 8px;
        }
    </style>
</head>
<body>
    <h1>üì¶ Gesti√≥n de Productos en Tiempo Real</h1>

    <div class="form-section">
        <h2>‚ûï Agregar Nuevo Producto</h2>
        <form id="add-form">
            <div>
                <label for="add-title">T√≠tulo:</label>
                <input id="add-title" name="title" type="text" placeholder="T√≠tulo" required>
            </div>
            <div>
                <label for="add-description">Descripci√≥n:</label>
                <input id="add-description" name="description" type="text" placeholder="Descripci√≥n" required>
            </div>
            <div>
                <label for="add-code">C√≥digo:</label>
                <input id="add-code" name="code" type="text" placeholder="C√≥digo √önico" required>
            </div>
            <div>
                <label for="add-price">Precio:</label>
                <input id="add-price" name="price" type="number" step="0.01" placeholder="Precio" required min="0">
            </div>
            <div>
                <label for="add-stock">Stock:</label>
                <input id="add-stock" name="stock" type="number" placeholder="Stock" required min="0">
            </div>
            <div>
                <label for="add-category">Categor√≠a:</label>
                <input id="add-category" name="category" type="text" placeholder="Categor√≠a" required>
            </div>
            <button type="submit">Agregar Producto</button>
        </form>
    </div>

    <div class="form-section">
        <h2>‚ûñ Eliminar Producto por ID</h2>
        <form id="delete-form">
            <div>
                <label for="delete-id">ID del producto a eliminar:</label>
                <input id="delete-id" name="id" type="text" placeholder="ID de Mongoose (ej: 60b8d295f8a7e30015f8e123)" required pattern="^[a-fA-F0-9]{24}$" title="Debe ser un ObjectId v√°lido de 24 caracteres hexadecimales.">
            </div>
            <button type="submit">Eliminar Producto</button>
        </form>
    </div>

    <div class="form-section">
        <h2>üì¶ Lista Actual de Productos</h2>
        <ul id="product-list">
            {{#if products.length}}
                {{#each products}}
                    <li>
                        <strong>{{title}}</strong> - <span>{{description}}</span><br>
                        <span>Precio: ${{price}}</span> | <span>Stock: {{stock}}</span> | <span>C√≥digo: {{code}}</span> | <span>Categor√≠a: {{category}}</span><br>
                        <span>ID: <span class="product-id">{{_id}}</span></span>
                    </li>
                {{/each}}
            {{else}}
                <p class="no-products">No hay productos disponibles.</p>
            {{/if}}
        </ul>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();

        // Escucha el evento 'products' del servidor para actualizar la lista
        socket.on('products', products => {
            const list = document.getElementById('product-list');
            list.innerHTML = ''; // Limpia la lista actual

            if (products && products.length > 0) {
                products.forEach(p => {
                    const li = document.createElement('li');
                    li.innerHTML = `
                        <strong>${p.title}</strong> - <span>${p.description}</span><br>
                        <span>Precio: $${p.price}</span> | <span>Stock: ${p.stock}</span> | <span>C√≥digo: ${p.code}</span> | <span>Categor√≠a: ${p.category}</span><br>
                        <span>ID: <span class="product-id">${p._id}</span></span>
                    `;
                    list.appendChild(li);
                });
            } else {
                list.innerHTML = '<p class="no-products">No hay productos disponibles.</p>';
            }
        });

        // Manejador del formulario para agregar producto
        document.getElementById('add-form').addEventListener('submit', e => {
            e.preventDefault();
            const form = e.target;
            const data = {
                title: form.title.value,
                description: form.description.value,
                code: form.code.value,
                price: Number(form.price.value), // Asegura que sea n√∫mero
                stock: Number(form.stock.value), // Asegura que sea n√∫mero
                category: form.category.value,
                // thumbnails: [], // Puedes a√±adir esto si tu form lo permite
                // status: true // Por defecto si no se incluye en el formulario
            };
            socket.emit('addProduct', data); // Emite el evento 'addProduct' al servidor
            form.reset(); // Limpia el formulario
        });

        // Manejador del formulario para eliminar producto
        document.getElementById('delete-form').addEventListener('submit', e => {
            e.preventDefault();
            const id = e.target.id.value; // Obt√©n el ID como string
            if (id) {
                // Validaci√≥n b√°sica de formato de ObjectId antes de emitir
                if (id.match(/^[a-fA-F0-9]{24}$/)) {
                    socket.emit('deleteProduct', id); // Emite el evento 'deleteProduct' al servidor
                } else {
                    alert('Por favor, ingresa un ID de producto v√°lido (24 caracteres hexadecimales).');
                }
            }
            e.target.reset(); // Limpia el formulario
        });
    </script>
</body>
</html>